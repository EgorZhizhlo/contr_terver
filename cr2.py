import numpy as np
import pandas as pd
from scipy.stats import pearsonr, ttest_ind, f
import re


alpha = 0.01  # Уровень значимости 1
alpha_var = 0.01  # Уровень значимости 2
# Исходная строка с данными
data_str = """
{(-221.27, -187.5918); (-192.83, -246.5726); (-191.66, -157.717); (-217.45, -207.2202); (-190.87, -183.9193); (-196.66, -161.6552); (-172.92, NA); (-222.8, -197.8504); (-163.67, -180.0162); (-182.16, -177.1457); (-222.84, -228.1836); (-219.49, -238.3224); (-214.09, -155.4732); (NA, -220.5798); (-238.02, -207.4899); (-222.16, -204.1369); (-173.41, NA); (-201.35, -136.4756); (-221.79, -221.3208); (NA, -187.1945); (-226, -254.1823); (-228.73, -149.368); (-191.59, -167.6243); (-197.97, -140.7426); (-172.22, -241.407); (-194.44, -160.3555); (-187.25, -218.5963); (-228.03, -270.5131); (-187.78, NA); (-235.38, -181.085); (-194.08, -212.5175); (-210.21, -195.8458); (-194.41, -158.3281); (-239.64, -183.2923); (-201.07, -208.4192); (-204.28, NA); (-201.66, -208.8661); (-183.65, -180.6926); (-198.71, -186.8729); (-210.69, -138.4937); (NA, -197.7993); (-181.07, -156.7809); (-199.99, -214.3242); (-225.31, -224.6112); (-180.62, -218.4411); (-203.17, -194.5271); (NA, -182.4558); (-227.03, -208.8614); (-243.54, -227.6371); (-182.54, -185.5053); (-263.79, -217.7684); (NA, -196.3784); (-277.98, NA); (-187.34, -178.1529); (-219.76, -233.3913); (-171.73, NA); (-193.84, -226.0755); (-223.52, NA); (NA, NA); (NA, -197.9568); (-196.67, -234.8369); (-215.96, -200.2258); (-239.54, -237.5257); (-191.88, -215.4982); (-221.69, -243.4452); (-198.93, -182.2303); (-209.05, -183.7036); (-203.88, -215.2587); (-234.44, -189.2311); (-187.44, -240.8399); (-190.27, -168.4008); (-225.64, -203.9524); (NA, -199.3603); (-165.07, -198.4688); (-245.11, -198.5083); (-211.97, -204.8608); (-217.39, -217.5512); (-247.41, -184.0205); (-202.15, -134.4986); (-214.98, -165.6204); (-245.78, -226.7931); (-220.39, -175.7779); (-222.8, -183.8993); (-240.67, -207.2784); (-180.64, -205.011); (-207.03, -179.1737); (-182.64, NA); (-214.14, -158.8596); (-216.23, -236.4842); (-192.65, -186.8183); (-169.68, -181.9271); (-227.71, -154.1279); (-173.12, -229.6616); (-156.2, -198.3611); (-172.22, -221.1983); (-223.06, -161.0541); (-189.02, NA); (-174.2, -177.7619); (-209.59, -188.2139); (-206.8, -161.2345); (-213.1, -187.2249); (-218.11, -212.3654); (-228.85, -195.4527); (NA, -202.922); (-196.29, -185.497); (-230.37, -216.9944); (-205.89, -190.7729); (-184.03, -219.7007); (-229.45, -237.0309); (-232.77, -183.3059); (-203.48, -189.0888); (-214.19, -199.2969); (-243.21, -220.1847); (-201.93, -224.0083); (-178.09, -236.2945); (-169, -192.1761); (-202.88, -210.794); (-213.41, -262.8658); (-185.35, -229.1771); (-234.62, -215.9693); (-206.27, -212.2713); (-188.61, -222.7473); (NA, -246.104); (-222.97, -178.3409); (NA, -194.8846); (-177.19, -178.2891); (-183.63, -185.3119); (-198.45, -226.1913); (-218.39, -212.6057); (-189.34, -202.3616); (-183.33, -233.7201); (-226.77, -183.8089); (-211.56, -233.7908); (-181, -213.4367); (-166.58, -246.669); (-221.82, -172.3898); (-168.72, -170.9286); (-185.68, -244.1536); (-210.83, -200.5838); (-205.15, -199.5097); (-220.22, -240.0895); (-210.51, -195.3316); (-190.85, -221.5801); (-199.41, -204.1989); (-208.62, -224.021); (-182.01, -202.4738); (-206.94, -181.5337); (-216.13, -241.2522); (-181.76, -207.5477); (-203.26, -220.5362)}
"""

# Извлекаем пары чисел (x, y) с помощью регулярного выражения
pattern = r'\(([^)]+)\)'
data = [tuple(map(lambda x: float(x.strip()) if x.strip(
) != 'NA' else np.nan, p.split(','))) for p in re.findall(pattern, data_str)]


# Преобразуем в DataFrame
df = pd.DataFrame(data, columns=['A', 'B'])

# Заменяем 'NA' на np.nan для работы с пропущенными значениями
df['A'] = pd.to_numeric(df['A'], errors='coerce')
df['B'] = pd.to_numeric(df['B'], errors='coerce')

# Удаляем строки с пропущенными значениями
df = df.dropna()

# 1. Коэффициент корреляции Пирсона
corr, _ = pearsonr(df['A'], df['B'])
print("Коэффициент корреляции Пирсона:", corr)

# 2.1 P-value для гипотезы о равенстве средних (неравенство дисперсий)
t_stat, p_value_mean = ttest_ind(df['A'], df['B'], equal_var=False)
print("P-value для гипотезы о равенстве средних:", p_value_mean)

# 2.2 Проверка гипотезы на уровне значимости 0.1
if p_value_mean < alpha:
    print(1)  # Средние значения различны
else:
    print(0)  # Средние значения не различны

# 3.1 P-value для гипотезы о равенстве дисперсий
var_A = np.var(df['A'], ddof=1)
var_B = np.var(df['B'], ddof=1)

F_stat = var_A / var_B if var_A > var_B else var_B / var_A
dof1 = len(df['A']) - 1
dof2 = len(df['B']) - 1

p_value_var = 1 - f.cdf(F_stat, dof1, dof2)
print("P-value для гипотезы о равенстве дисперсий:", p_value_var)

# 3.2 Проверка гипотезы на уровне значимости 0.05
if p_value_var < alpha_var:
    print(1)  # Дисперсии различны
else:
    print(0)  # Дисперсии не различны
